{"version":3,"sources":["Components/Home/Home.jsx","Components/Header/Header.jsx","Components/Login/Login.jsx","Components/SinglePost/SinglePost.jsx","Components/CreatePost/CreatePost.jsx","App.js","index.js"],"names":["Home","props","useState","posts","setPosts","getPosts","a","fetch","method","headers","response","json","data","useEffect","token","map","post","Col","sm","className","to","pathname","state","postId","_id","id","Card","CardTitle","tag","title","CardText","text","published","Button","color","Spinner","Header","setToken","localStorage","getItem","Login","username","setUsername","password","setPassword","errors","setErrors","history","useHistory","login","e","preventDefault","body","JSON","stringify","setItem","push","Form","FormGroup","Label","Input","onChange","target","value","type","name","placeholder","onClick","SinglePost","location","postData","setPostData","setTitle","setText","setPublished","postSave","setPostSave","getSinglePost","localToken","Authorization","changeStatus","savePost","status","deletePost","action","rows","CreatePost","createPost","for","App","codedToken","jwt","decode","Date","exp","now","clear","getLocalToken","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b314fbaf.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./home.css\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Button, CardTitle, CardText, Col, Spinner } from \"reactstrap\";\n\nconst Home = (props) => {\n  const [posts, setPosts] = useState();\n\n  const getPosts = async () => {\n    const response = await fetch(\n      \"https://warm-ravine-05729.herokuapp.com/admin/blog/all\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    setPosts(data);\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return props.token ? (\n    posts ? (\n      posts.map((post) => {\n        return (\n          <Col key={post._id} sm={6} className=\"mx-auto mt-5 post-container\">\n            <Link\n              to={{ pathname: \"/post\", state: { postId: post._id } }}\n              id={post._id}\n              className=\"post-container\"\n            >\n              <Card>\n                <CardTitle tag=\"h5\">{post.title}</CardTitle>\n                <CardText>{post.text}</CardText>\n                {post.published ? (\n                  <Button className=\"btn\" color=\"success\">\n                    Public\n                  </Button>\n                ) : (\n                  <Button className=\"btn\" color=\"danger\">\n                    Private\n                  </Button>\n                )}\n              </Card>\n            </Link>\n          </Col>\n        );\n      })\n    ) : (\n      <div className=\"spinner\">\n        <Spinner color=\"primary mx-auto mt-5 \" />\n      </div>\n    )\n  ) : (\n    <h1>Please Log in</h1>\n  );\n};\n\nexport default Home;\n","import \"./header.css\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst Header = (props) => {\n  const [token, setToken] = useState();\n\n  const getToken = () => {\n    if (localStorage.getItem(\"token\")) {\n      setToken(localStorage.getItem(\"token\"));\n    }\n  };\n\n  useEffect(() => {\n    getToken();\n  }, []);\n\n  return (\n    <div className=\"header-container\">\n      <h1>Admin Stuff</h1>\n      <div className=\"nav-bts\">\n        <Link className=\"link\" to=\"/blog-admin\">\n          Home\n        </Link>\n        <Link className=\"link\" to=\"/blog-admin/create\">\n          Create Post\n        </Link>\n        {token ? null : (\n          <Link className=\"link\" to=\"/blog-admin/login\">\n            Log in\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useState } from \"react\";\nimport \"./login.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, FormGroup, Input, Button, Label, Col } from \"reactstrap\";\n\nconst Login = (props) => {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [errors, setErrors] = useState();\n\n  const getUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const getPassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  let history = useHistory();\n\n  const login = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\n      \"https://warm-ravine-05729.herokuapp.com/login\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: username,\n          password: password,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    if (data) {\n      props.setToken(data.token);\n      localStorage.setItem(\"token\", data.token);\n      history.push(\"/blog-admin\");\n    } else setErrors(\"Invalid username or password\");\n  };\n\n  return (\n    <Form className=\"login-form mt-5 mx-auto\">\n      <Col sm={6} className=\"mx-auto\">\n        <FormGroup>\n          <Label>Enter username</Label>\n          <Input\n            onChange={getUsername}\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Username\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label>Enter Password</Label>\n          <Input\n            onChange={getPassword}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </FormGroup>\n        <Button onClick={login} type=\"submit\" color=\"success\">\n          Log in\n        </Button>\n        {errors ? (\n          <FormGroup className=\"mt-4\">\n            <Label>{errors}</Label>\n          </FormGroup>\n        ) : null}\n      </Col>\n    </Form>\n  );\n};\n\nexport default Login;\n","import \"./singlePost.css\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { Spinner, Button } from \"reactstrap\";\n\nconst SinglePost = (props) => {\n  const { postId } = props.location.state;\n  const [postData, setPostData] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [published, setPublished] = useState();\n  const [token, setToken] = useState();\n  const [postSave, setPostSave] = useState();\n\n  let history = useHistory();\n\n  //GET THE SINGLE POST DATA WHEN CLICKED\n\n  const getSinglePost = async () => {\n    const localToken = localStorage.getItem(\"token\");\n    if (localToken) {\n      setToken(localToken);\n      const response = await fetch(\"/blog/\" + postId, {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + token,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n      setPostData(data);\n      setPublished(data.published);\n      setTitle(data.title);\n      setText(data.text);\n    }\n  };\n\n  useEffect(() => {\n    getSinglePost();\n  }, []);\n\n  const changeTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const changeText = (e) => {\n    setText(e.target.value);\n  };\n  //CHANGE THE POST STATUS TO PUBLISHED OR UNPUBLISHED\n  const changeStatus = async () => {\n    const response = await fetch(\"/admin/\" + postId + \"/public\", {\n      method: \"PUT\",\n    });\n    const data = await response.json();\n    setPublished(data.published);\n  };\n\n  //SAVE THE POST WITH THE CHANGES\n  const savePost = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\n      `https://warm-ravine-05729.herokuapp.com/admin/${postId}/edit`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({\n          title: title,\n          text: text,\n        }),\n        headers: {\n          Authorization: \"Bearer \" + token,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    if (response.status === 200) {\n      setPostSave(true);\n    }\n  };\n\n  //DELETE THE CURRENT POST\n  const deletePost = async () => {\n    const response = await fetch(\n      \"https://warm-ravine-05729.herokuapp.com/admin/\" + postId + \"/delete\",\n      {\n        method: \"DELETE\",\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      }\n    );\n    if (response.status === 200) {\n      history.push(\"/\");\n    }\n  };\n\n  return postData ? (\n    postSave ? (\n      <Redirect to=\"/blog-admin\" />\n    ) : (\n      <div className=\"singlepost-container\">\n        <div>\n          <h4>Here you can Edit your post title, text and make it public</h4>\n        </div>\n        <form action=\"\">\n          <input\n            className=\"title\"\n            type=\"text\"\n            onChange={changeTitle}\n            value={title}\n          />\n          <textarea\n            rows=\"10\"\n            onChange={changeText}\n            value={text}\n            className=\"singlepost-text\"\n          />\n          <p>Click to Change Status</p>\n\n          {published ? (\n            <p onClick={changeStatus} className=\"public\">\n              publicado\n            </p>\n          ) : (\n            <p onClick={changeStatus} className=\"private\">\n              no publicado\n            </p>\n          )}\n          <div>\n            <Button onClick={deletePost} color=\"danger\">\n              Delete{\" \"}\n            </Button>\n          </div>\n          <input\n            type=\"submit\"\n            onClick={savePost}\n            value=\"Save\"\n            className=\"save-post\"\n          />\n        </form>\n      </div>\n    )\n  ) : (\n    <div className=\"spinner\">\n      <Spinner color=\"primary\" />\n    </div>\n  );\n};\n\nexport default SinglePost;\n","import { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./createPost.css\";\n\nconst CreatePost = (props) => {\n  let history = useHistory();\n\n  const [title, setTitle] = useState();\n  const [text, setText] = useState();\n\n  const getTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const getText = (e) => {\n    setText(e.target.value);\n  };\n\n  const createPost = async () => {\n    const token = localStorage.getItem(\"token\");\n    const response = await fetch(\n      \"https://warm-ravine-05729.herokuapp.com/admin/blog/new\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          title: title,\n          text: text,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token,\n        },\n      }\n    );\n    const data = await response.json();\n    if (response.status === 200) {\n      history.push(\"/blog-admin\");\n    }\n  };\n\n  return (\n    <Form className=\"form-container mx-auto\">\n      <FormGroup>\n        <Label for=\"title\">Post Title</Label>\n        <Input\n          onChange={getTitle}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Enter title..\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"text\">Post Text</Label>\n        <Input\n          onChange={getText}\n          type=\"textarea\"\n          rows=\"10\"\n          name=\"text\"\n          className=\"input-text\"\n          placeholder=\"Enter post text...\"\n        />\n      </FormGroup>\n      <Button onClick={createPost} color=\"success\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default CreatePost;\n","import Home from \"./Components/Home/Home\";\nimport \"./normalize.css\";\nimport Header from \"./Components/Header/Header\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from \"./Components/Login/Login\";\nimport { useState, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport SinglePost from \"./Components/SinglePost/SinglePost\";\nimport CreatePost from \"./Components/CreatePost/CreatePost\";\n\nfunction App() {\n  //GET JWT TOKEN\n  const [token, setToken] = useState();\n\n  const getLocalToken = () => {\n    if (localStorage.getItem(\"token\")) {\n      const codedToken = localStorage.getItem(\"token\");\n      const localToken = jwt.decode(codedToken);\n\n      const expiresAt = new Date(localToken.exp * 1000);\n      if (expiresAt < new Date(Date.now())) {\n        localStorage.clear();\n      } else if (codedToken) {\n        setToken(codedToken);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getLocalToken();\n  });\n\n  return (\n    <BrowserRouter>\n      <div>\n        <Header />\n      </div>\n      <Switch>\n        <Route exact path=\"/blog-admin\">\n          <Home token={token} />\n        </Route>\n        <Route path=\"/blog-admin/login\">\n          <Login setToken={setToken} />\n        </Route>\n        <Route path=\"/blog-admin/post\" component={SinglePost} />\n        <Route path=\"/blog-admin/create\" component={CreatePost} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}